#!/bin/bash
#
# Заменитель chmod и secon для изменения прав доступа к файлу
# в реальной файловой системе.
#
# Это аналог скрипта tools/img-perm, но работает непосредственно
# в файловой системе целевого устройства.
#

function file_perm() {
	if ! test -e "$FILE" ; then
		echo "$0: файл $FILE не существует"
		exit 1
	fi

	test -n "$MODE" && chmod $MODE "${DIR}/${FILE}"
	test -n "$FUID" && chown $FUID "${DIR}/${FILE}"
	test -n "$FGID" && chgrp $FGID "${DIR}/${FILE}"
	test -n "$FILCON" && chcon "$FILCON" "${DIR}/${FILE}"
}


if test -z "$*" ; then
	echo "Меняет права доступа к файлу в файловой системе"
	echo "Запуск: $0 [опции] [файлы ...]"
	echo ""
	echo "-b <каталог>  Задать базовый каталог для последующих имён файлов"
	echo "-u <владелец> Установить идентификатор владельца файлов"
	echo "-g <группа>   Установить идентификатор группы файлов"
	echo "-m <режим>    Установить режим доступа к файлам"
	echo "-c <контекст> Задать контекст безопасности файла"
	echo "-f <список>   Установить права доступа согласно правилам в файле"
	echo ""
	echo "Файл со списком прав доступа содержит строки в формате:"
	echo "<имя файла> <владелец> <группа> <права доступа> <контекст безопасности>"
	echo "Владелец, группа, права доступа могут быть -1 для значений по умолчанию."
	exit 1
fi

FUID=
FGID=
MODE=
SECON=
PERMLIST=
BASEDIR=

while [ -n "$1" ] ; do
	case $1 in
		-u) FUID=$2; shift ;;
		-g) FGID=$2; shift ;;
		-m) MODE=$2; shift ;;
		-c) SECON=$2; shift ;;
		-f) PERMLIST=$2; shift ;;
		-b) BASEDIR=$2; shift ;;
		 *) FILE="${BASEDIR}$1"; file_perm ;;
	esac

	shift
done

test -z "$PERMLIST" && exit 0

while read FILE FUID FGID MODE SECON ; do
	FILE="${BASEDIR}${FILE}"
	file_perm
done < "$PERMLIST"
